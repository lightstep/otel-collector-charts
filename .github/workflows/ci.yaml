name: Lint and Test Charts

on: pull_request

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Add Helm Repos
        run: |
          helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts
          helm repo add jetstack https://charts.jetstack.io
          helm repo add prometheus https://prometheus-community.github.io/helm-charts

      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --config ct.yaml --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        uses: helm/kind-action@v1.4.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Secret setup
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl create namespace opentelemetry
          kubectl create secret generic otel-collector-secret -n opentelemetry --from-literal=LS_TOKEN=TEST_TOKEN

      - name: Dependencies
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.8.0 --set installCRDs=true --wait
          helm install opentelemetry-operator open-telemetry/opentelemetry-operator -n opentelemetry-operator --set manager.collectorImage.repository="otel/opentelemetry-collector-contrib" --wait

      - name: Run chart-testing collector-k8s (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --config ct.yaml --charts ./charts/collector-k8s --namespace opentelemetry --debug

      - name: Run chart-testing kube-otel-state (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --config ct.yaml --charts ./charts/kube-otel-stack --helm-extra-set-args="--set=tracesCollector.enabled=true --set=logsCollector.enabled=true" --namespace opentelemetry --debug

      - name: Run chart-testing otel-cloud-stack (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --config ct.yaml --charts ./charts/otel-cloud-stack --helm-extra-set-args="--set=tracesCollector.enabled=true --set=logsCollector.enabled=true" --namespace opentelemetry --debug
