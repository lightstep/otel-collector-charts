{{ $collectorList := (append (append .Values.collectors .Values.tracesCollector) .Values.metricsCollector) }}
{{ range $_, $collector := $collectorList -}}
{{ if $collector.enabled }}
{{ $collectorName := (print $.Release.Name "-" $collector.name) }}
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: "{{ $collectorName }}"
  {{- with $collector.annotations }}
  annotations:
    {{- toYaml . | nindent 4}}
  {{- end }}
  labels:
    {{- include "kube-otel-stack.labels" $ | indent 4 }}
spec:
  mode: {{ $collector.mode }}
  image: {{ $collector.image }}
  replicas: {{ $collector.replicas | default 1 }}
  {{- with $collector.podAnnotations }}
  podAnnotations:
    {{- toYaml . | nindent 4}}
  {{- end }}
  ports:
    - name: "metrics"
      protocol: TCP
      port: 8888
{{- if $collector.targetallocator }}
{{- if $collector.targetallocator.enabled }}
  targetAllocator:
    enabled: true
    image: {{ $collector.targetallocator.image }}
    replicas: {{ $collector.targetallocator.replicas }}
    allocationStrategy: {{ $collector.targetallocator.allocationStrategy }}
    {{- if $collector.targetallocator.filterStrategy }}
    filterStrategy: {{ $collector.targetallocator.filterStrategy }}
    {{- end }}
    {{- if $collector.targetallocator.prometheusCR.enabled }}
    prometheusCR:
      {{- with $collector.targetallocator.prometheusCR }}
      {{- toYaml .  | nindent 6 }}
      {{- end }}
    {{- end }}
{{- end }}
{{- end }}
  env:
    {{- toYaml $collector.env | nindent 4}}
    - name: KUBE_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: KUBE_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
  config: |
    exporters:
      {{- toYaml $collector.config.exporters | nindent 6 }}
    extensions:
      {{- toYaml $collector.config.extensions | nindent 6 }}
    receivers:
      {{- toYaml $collector.config.receivers | nindent 6 }}
      prometheus:
        config:
          scrape_configs:
          {{ if $collector.scrape_configs_file }}
          {{ tpl ($.Files.Get $collector.scrape_configs_file) $ | nindent 10 }}
          {{ end }}
          {{- if (not (eq $collector.mode "statefulset")) }}
          - job_name: otel-collector
            scrape_interval: 5s
            static_configs:
            - labels:
                collector_name: ${KUBE_POD_NAME}
              targets:
                - 0.0.0.0:8888
          {{ end }}
        {{- if $collector.targetallocator }}
        {{- if $collector.targetallocator.enabled }}
        target_allocator:
          endpoint: http://{{ $collectorName }}-targetallocator:80
          interval: 30s
          collector_id: ${POD_NAME}
          http_sd_config:
            refresh_interval: 60s
        {{ end }}
        {{ end }}
    processors:
      {{- toYaml $collector.config.processors | nindent 6 }}
    service:
      {{- toYaml $collector.config.service | nindent 6 }}
  resources:
    {{- toYaml $collector.resources | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "{{ $collectorName }}"
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["monitoring.coreos.com"]
  resources:
  - servicemonitors
  - podmonitors
  verbs: ["get", "list", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources:
  - endpointslices
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics", "/metrics/cadvisor"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ $collectorName }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "{{ $collectorName }}"
subjects:
- kind: ServiceAccount
  # quirk of the Operator
  name: "{{ $collectorName }}-collector"
  namespace: {{ $.Release.Namespace }}
{{- if eq $collector.mode "statefulset" }}
- kind: ServiceAccount
  name: {{ $collectorName }}-targetallocator
  namespace: {{ $.Release.Namespace }}
{{- end }}
---
{{ end }}
{{- end }}
