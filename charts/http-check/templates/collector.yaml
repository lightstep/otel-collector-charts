{{ if .Values.collector.enabled }}
{{ $collectorName := (print $.Release.Name "-" .Values.collector.name) }}
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: "{{ $collectorName }}"
spec:
  mode: {{ .Values.collector.mode }}
  image: {{ .Values.collector.image }}
  replicas: 1
  ports:
    - name: "metrics"
      protocol: TCP
      port: 8888
  env:
    - name: KUBE_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: KUBE_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: LS_TOKEN
      valueFrom:
        secretKeyRef:
          key: LS_TOKEN
          name: otel-collector-secret
  config: |
    receivers:
      {{ range $name, $check := .Values.checks -}}
      httpcheck/{{ $name }}:
        endpoint: {{ $check.url }}
        collection_interval: {{ $check.collection_interval | default "60s" | quote }}
        method: {{ $check.method | default "GET" }}
      {{ end }}

    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 30
      batch:
        send_batch_size: 1000
        timeout: 1s
        send_batch_max_size: 1500

    exporters:
      otlp:
        endpoint: ingest.lightstep.com:443
        headers:
          "lightstep-access-token": "${LS_TOKEN}"

    service:
      pipelines:
        metrics:
          receivers: [{{ range $i, $name := keys .Values.checks -}} {{ print "httpcheck/" $name "," }} {{- end }}]
          processors: [memory_limiter, batch]
          exporters: [otlp]
  resources:
    {{- toYaml .Values.collector.resources | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "{{ $collectorName }}"
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["monitoring.coreos.com"]
  resources:
  - servicemonitors
  - podmonitors
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics", "/metrics/cadvisor"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ $collectorName }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "{{ $collectorName }}"
subjects:
- kind: ServiceAccount
  # quirk of the Operator
  name: "{{ $collectorName }}-collector"
  namespace: {{ $.Release.Namespace }}
---
{{ end }}
